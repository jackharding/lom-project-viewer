
// generic transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}
@mixin transform-style($val) {
  -webkit-transform-style: $val;
  -moz-transform-style: $val;
  -ms-transform-style: $val;
  transform-style: $val;
}
@mixin perspective($val) {
  -webkit-perspective: $val; 
  -moz-perspective: $val; 
  -ms-perspective: $val; 
  perspective: $val;
}

// Keyframes
@mixin keyframes($name) {
    @-moz-keyframes #{$name} { @content; }
    @-webkit-keyframes #{$name} { @content; }
    @-o-keyframes #{$name} { @content; }
    @-ms-keyframes #{$name} { @content; }
    @keyframes #{$name} { @content; }
}
@mixin animation($name, $duration: 2s, $iteration: infinite) {

    -webkit-animation-name: $name;
    -moz-animation-name: $name;
    -o-animation-name: $name;
    animation-name: $name;

    -webkit-animation-fill-mode:both;
    -moz-animation-fill-mode:both;
    -ms-animation-fill-mode:both;
    -o-animation-fill-mode:both;
    animation-fill-mode:both;

    animation-iteration-count: $iteration;
    -moz-animation-iteration-count: $iteration;
    -webkit-animation-iteration-count: $iteration;

    -webkit-animation-duration: $duration;
    -moz-animation-duration: $duration;
    -ms-animation-duration: $duration;
    -o-animation-duration: $duration;
    animation-duration: $duration;

}

// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));

  filter:  progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($deg)}, M12=-#{sin($deg)}, M21=#{sin($deg)}, M22=#{cos($deg)});
  -ms-filter: "progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=-#{sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)})";
  zoom: 1;
 }
 
// scale
@mixin scale($scale) {
   @include transform(scale($scale));
} 

// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}

// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}

//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
       -o-transform-origin: $origin;
      -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
          transform-origin: $origin;
}

// transition
@mixin transition($transition-property, $transition-time, $method:ease-in-out, $delay:0s, $multiple...) {
  -webkit-transition: $transition-property $transition-time $method $delay, $multiple;
  -moz-transition: $transition-property $transition-time $method $delay, $multiple;
  -ms-transition: $transition-property $transition-time $method $delay, $multiple;
  -o-transition: $transition-property $transition-time $method $delay, $multiple;
  transition: $transition-property $transition-time $method $delay, $multiple;
}

// transition delay
@mixin transition-delay($delay) {
    -webkit-transition-delay: $delay;
    transition-delay: $delay;
}

// Styles for sizes
@mixin respond($media) {
  @media only screen and #{$media} { @content; }
}

// All sides border-radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

// Single side border-radius
@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
   -webkit-border-top-left-radius: $radius;
   border-top-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
     -webkit-border-top-right-radius: $radius;
     border-top-right-radius: $radius;
     background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
   -webkit-border-bottom-left-radius: $radius;
   border-bottom-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
     -webkit-border-top-left-radius: $radius;
     border-top-left-radius: $radius;
     background-clip: padding-box;
}

// Add Box Shadows
@mixin box-shadow($x:0px, $y:0px, $blur:3px, $spread:3px, $color:#000000) {
  -moz-box-shadow: $x $y $blur $spread $color;
  -webkit-box-shadow: $x $y $blur $spread $color;
  box-shadow: $x $y $blur $spread $color;
}
// Remove Box Shadows
@mixin remove-box-shadow() {
  -moz-box-shadow: none;
  -webkit-box-shadow: none;
  box-shadow: none;
}

// https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html 
//
// grayscale      ex: filter: grayscale(100%);
// sepia          ex: filter: sepia(100%);
// saturate       ex: filter: saturate(0%);
// hue-rotate     ex: filter: hue-rotate(45deg);
// invert         ex: filter: invert(100%);
// brightness     ex: filter: brightness(15%);
// contrast       ex: filter: contrast(200%);
// blur           ex: filter: blur(2px);

@mixin filter($filter-type,$filter-amount) { 
  -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
  -moz-filter: $filter-type+unquote('(#{$filter-amount})');
  -ms-filter: $filter-type+unquote('(#{$filter-amount})');
  -o-filter: $filter-type+unquote('(#{$filter-amount})');
  filter: $filter-type+unquote('(#{$filter-amount})');
}
// Placeholder
@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}  
}
// Change backface visibility
@mixin backface-visibility ($arguments) {
  -webkit-backface-visibility: $arguments;
     -moz-backface-visibility: $arguments;
      -ms-backface-visibility: $arguments;
       -o-backface-visibility: $arguments;
          backface-visibility: $arguments;
}

@mixin stroke($width, $color) {
  -webkit-text-stroke-width: $width;
  -moz-text-stroke-width: $width;
  -o-text-stroke-width: $width;
  -ms-text-stroke-width: $width;
  text-stroke-width: $width;
  -webkit-text-stroke-color: $color;
  -moz-text-stroke-color: $color;
  -o-text-stroke-color: $color;
  -ms-text-stroke-color: $color;
  text-stroke-color: $color;
}

@mixin background-size($size) {
  -webkit-background-size: $size;
  -moz-background-size: $size;
  -o-background-size: $size;
  background-size: $size;
}
